<feed xmlns="http://www.w3.org/2005/Atom"> <id>/</id><title>2pc</title><subtitle>A minimal, responsive, and powerful Jekyll theme for presenting professional writing.</subtitle> <updated>2023-06-20T11:12:41+00:00</updated> <author> <name>2pc</name> <uri>/</uri> </author><link rel="self" type="application/atom+xml" href="/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="/"/> <generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator> <rights> © 2023 2pc </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>Diagrams</title><link href="/posts/diagrams/" rel="alternate" type="text/html" title="Diagrams" /><published>2023-06-20T00:00:00+00:00</published> <updated>2023-06-20T00:00:00+00:00</updated> <id>/posts/diagrams/</id> <content src="/posts/diagrams/" /> <author> <name>2pc</name> </author> <category term="template" /> <summary> 在线代码生成图 swimlanes.io seqdiag databasediagram </summary> </entry> <entry><title>Dubbo线程池问题汇总</title><link href="/posts/dubbo_threadpool/" rel="alternate" type="text/html" title="Dubbo线程池问题汇总" /><published>2023-05-06T00:00:00+00:00</published> <updated>2023-05-08T09:20:52+00:00</updated> <id>/posts/dubbo_threadpool/</id> <content src="/posts/dubbo_threadpool/" /> <author> <name>2pc</name> </author> <category term="dubbo" /> <summary> 每个连接一个线程池ip+port,多个连接还要*connection 1.【2013-Need a limited Threadpool in consumer side】,优化方案在这里R【educe context switching cost by optimizing thread model on consumer side】 consumer端，每个连接一个线程池 2.i【ssues4467-why does dubbo creates a new ThreadPool for each connection】 端口共享线程池 1.dubbo线程池按照端口分配后仍然有不少问题，比如这个7054碰到有节点下线会不断关闭与重建线程池，修复PR-7109 </summary> </entry> <entry><title>Hudi Compact 流程</title><link href="/posts/hudi_compact/" rel="alternate" type="text/html" title="Hudi Compact 流程" /><published>2022-10-21T00:00:00+00:00</published> <updated>2022-10-21T00:00:00+00:00</updated> <id>/posts/hudi_compact/</id> <content src="/posts/hudi_compact/" /> <author> <name>2pc</name> </author> <category term="hudi" /> <summary> hudi spark/flink Compact流程图 </summary> </entry> <entry><title>Hudi upsert 流程</title><link href="/posts/hudi_upsert/" rel="alternate" type="text/html" title="Hudi upsert 流程" /><published>2022-10-17T00:00:00+00:00</published> <updated>2022-10-17T00:00:00+00:00</updated> <id>/posts/hudi_upsert/</id> <content src="/posts/hudi_upsert/" /> <author> <name>2pc</name> </author> <category term="hudi" /> <summary> Upsert流程图 </summary> </entry> <entry><title>CompletableFuture与ForkJoinPool</title><link href="/posts/CF_forkjoin/" rel="alternate" type="text/html" title="CompletableFuture与ForkJoinPool" /><published>2022-10-14T00:00:00+00:00</published> <updated>2022-11-07T09:23:11+00:00</updated> <id>/posts/CF_forkjoin/</id> <content src="/posts/CF_forkjoin/" /> <author> <name>2pc</name> </author> <category term="Java" /> <summary> CompletableFuture CompletableFuture常用方法 //thenApply public &amp;lt;U&amp;gt; CompletableFuture&amp;lt;U&amp;gt; thenApply( Function&amp;lt;? super T,? extends U&amp;gt; fn) { return uniApplyStage(null, fn); } //thenApplyAsync public &amp;lt;U&amp;gt; CompletableFuture&amp;lt;U&amp;gt; thenApplyAsync( Function&amp;lt;? super T,? extends U&amp;gt; fn) { return uniApplyStage(asyncPool, fn); } //thenCompose public &amp;lt;U&amp;gt; Compl... </summary> </entry> </feed>
